<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.trafficalarm.core.repositories.jpa"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value=""/>
	</bean>
        <!--bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"-->
        <!--property name="username" value="sa"/-->
        <!--property name="password" value="sa"/-->
        <!--property name="url" value="jdbc:h2:mem:test"/-->
        <!--property name="driverClassName" value="org.h2.Driver"/-->
    	<!--/bean-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <map>
         		<entry key="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/><!-- remove when working with mem db-->
                <entry key="hibernate.hbm2ddl.auto" value="update"/>
                <entry key="hibernate.show_sql" value="true"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.trafficalarm.core.model.entities"/>
    </bean>

    <tx:annotation-driven/>
    <mvc:annotation-driven />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>
    
    <import resource="classpath:spring/security/security-configuration.xml"/>
    <import resource="classpath:spring/security/authentication-managers.xml"/>
    <import resource="classpath:spring/security/endpoint-configuration.xml"/>
    <import resource="classpath:spring/oauth/oauth2-configuration.xml"/>
    <import resource="classpath:spring/oauth/token-store.xml"/>
    <import resource="classpath:spring/oauth/client-details.xml"/>
    
    <context:component-scan base-package="com.structure"/>
    <context:component-scan base-package="com.trafficalarm.services.impl"/>
    <!--context:component-scan base-package="com.trafficalarm.core.security.ex"/-->
    <context:component-scan base-package="com.trafficalarm.rest.configuration"/>
    <context:component-scan base-package="com.trafficalarm.rest.security"/>
    <context:component-scan base-package="com.trafficalarm.rest.filter"/>
    <context:component-scan base-package="com.trafficalarm.rest.resource"/>
    <context:component-scan base-package="com.trafficalarm.rest.api.user"/>
    <context:component-scan base-package="com.trafficalarm.rest.mvc"/>
</beans>